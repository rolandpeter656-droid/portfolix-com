import { useState } from "react";
import { Navigation } from "@/components/landing/Navigation";
import { Footer } from "@/components/landing/Footer";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Progress } from "@/components/ui/progress";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import {
  TrendingUp,
  Download,
  Plus,
  BarChart3,
  PieChart,
  Activity,
  Crown,
  ArrowUpRight,
  ArrowDownRight,
  Calendar,
  DollarSign,
} from "lucide-react";
import { CustomPortfolioBuilder } from "@/components/institutional/CustomPortfolioBuilder";
import { InstitutionalDisclaimer, INSTITUTIONAL_DISCLAIMER_TEXT } from "@/components/institutional/InstitutionalDisclaimer";
import jsPDF from "jspdf";
import { useToast } from "@/hooks/use-toast";

interface Portfolio {
  id: string;
  name: string;
  createdDate: string;
  allocation: {
    etfs?: number;
    bonds?: number;
    equities?: number;
    crypto?: number;
    cash?: number;
    commodities?: number;
  };
  projectedReturn: number;
  riskLevel: string;
  currentValue: number;
}

const mockPortfolios: Portfolio[] = [
  {
    id: "1",
    name: "Corporate Treasury Yield Portfolio",
    createdDate: "2025-10-15",
    allocation: { bonds: 60, cash: 25, equities: 10, commodities: 5 },
    projectedReturn: 5.2,
    riskLevel: "Low-Moderate",
    currentValue: 250000,
  },
  {
    id: "2",
    name: "Strategic Equity Growth",
    createdDate: "2025-10-20",
    allocation: { equities: 70, etfs: 20, cash: 10 },
    projectedReturn: 9.8,
    riskLevel: "Moderate-High",
    currentValue: 500000,
  },
];

export default function InstitutionalDashboard() {
  const [portfolios] = useState<Portfolio[]>(mockPortfolios);
  const [showBuilder, setShowBuilder] = useState(false);
  const { toast } = useToast();

  const totalValue = portfolios.reduce((sum, p) => sum + p.currentValue, 0);
  const avgReturn = portfolios.reduce((sum, p) => sum + p.projectedReturn, 0) / portfolios.length;

  const handleExportPDF = (portfolio: Portfolio) => {
    const doc = new jsPDF();

    // Header
    doc.setFontSize(20);
    doc.setTextColor(217, 119, 6); // Amber color
    doc.text("PortfoliX", 20, 20);

    doc.setFontSize(10);
    doc.setTextColor(100, 100, 100);
    doc.text("Institutional Portfolio Report", 20, 28);

    // Portfolio Name
    doc.setFontSize(16);
    doc.setTextColor(0, 0, 0);
    doc.text(portfolio.name, 20, 45);

    // Details
    doc.setFontSize(11);
    doc.text(`Created: ${new Date(portfolio.createdDate).toLocaleDateString()}`, 20, 55);
    doc.text(`Risk Level: ${portfolio.riskLevel}`, 20, 62);
    doc.text(`Projected Annual Return: ${portfolio.projectedReturn}%`, 20, 69);
    doc.text(`Current Value: $${portfolio.currentValue.toLocaleString()}`, 20, 76);

    // Allocation
    doc.setFontSize(14);
    doc.text("Asset Allocation", 20, 90);
    doc.setFontSize(11);
    let y = 98;
    Object.entries(portfolio.allocation).forEach(([asset, percent]) => {
      doc.text(`${asset.charAt(0).toUpperCase() + asset.slice(1)}: ${percent}%`, 25, y);
      y += 7;
    });

    // Footer/Watermark & Disclaimer
    doc.setFontSize(8);
    doc.setTextColor(150, 150, 150);
    doc.text("Generated by PortfoliX Institutional Portal", 20, 265);
    
    // Compliance Disclaimer
    doc.setFontSize(7);
    doc.setTextColor(100, 100, 100);
    const disclaimer = INSTITUTIONAL_DISCLAIMER_TEXT;
    const disclaimerLines = doc.splitTextToSize(disclaimer, 170);
    doc.text(disclaimerLines, 20, 273);
    
    // Footer note
    doc.setFontSize(6);
    doc.setTextColor(120, 120, 120);
    doc.text("For full compliance documentation, visit: portfolix.com/legal/institutional-disclaimer", 20, 290);

    doc.save(`${portfolio.name.replace(/\s+/g, "_")}_Report.pdf`);

    toast({
      title: "PDF Exported",
      description: "Your portfolio report has been downloaded successfully.",
    });
  };

  if (showBuilder) {
    return <CustomPortfolioBuilder onClose={() => setShowBuilder(false)} />;
  }

  return (
    <div className="min-h-screen bg-background">
      <Navigation />

      <div className="container mx-auto px-4 py-8 pt-24 max-w-7xl">
        {/* Header */}
        <div className="mb-8 animate-fade-in">
          <div className="flex items-center justify-between mb-2">
            <div>
              <h1 className="text-4xl font-bold bg-gradient-to-r from-amber-600 to-amber-500 bg-clip-text text-transparent">
                Institutional Dashboard
              </h1>
              <p className="text-muted-foreground mt-2">
                Manage your AI-powered institutional portfolios
              </p>
            </div>
            <Badge
              variant="outline"
              className="border-amber-500/50 text-amber-600 dark:text-amber-400"
            >
              Corporate Growth Plan
            </Badge>
          </div>
        </div>

        {/* Overview Cards */}
        <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8 animate-fade-in">
          <Card className="border-border/50 hover:shadow-lg transition-all duration-300">
            <CardHeader className="flex flex-row items-center justify-between pb-2">
              <CardTitle className="text-sm font-medium text-muted-foreground">
                Total Portfolio Value
              </CardTitle>
              <DollarSign className="h-4 w-4 text-amber-600 dark:text-amber-400" />
            </CardHeader>
            <CardContent>
              <div className="text-3xl font-bold">${totalValue.toLocaleString()}</div>
              <p className="text-xs text-muted-foreground mt-1 flex items-center gap-1">
                <ArrowUpRight className="h-3 w-3 text-green-600" />
                +12.3% from last month
              </p>
            </CardContent>
          </Card>

          <Card className="border-border/50 hover:shadow-lg transition-all duration-300">
            <CardHeader className="flex flex-row items-center justify-between pb-2">
              <CardTitle className="text-sm font-medium text-muted-foreground">
                Avg. Projected Return
              </CardTitle>
              <TrendingUp className="h-4 w-4 text-amber-600 dark:text-amber-400" />
            </CardHeader>
            <CardContent>
              <div className="text-3xl font-bold">{avgReturn.toFixed(1)}%</div>
              <p className="text-xs text-muted-foreground mt-1">Annual projection</p>
            </CardContent>
          </Card>

          <Card className="border-border/50 hover:shadow-lg transition-all duration-300">
            <CardHeader className="flex flex-row items-center justify-between pb-2">
              <CardTitle className="text-sm font-medium text-muted-foreground">
                Active Strategies
              </CardTitle>
              <Activity className="h-4 w-4 text-amber-600 dark:text-amber-400" />
            </CardHeader>
            <CardContent>
              <div className="text-3xl font-bold">{portfolios.length}</div>
              <p className="text-xs text-muted-foreground mt-1">
                {6 - portfolios.length} more available
              </p>
            </CardContent>
          </Card>
        </div>

        {/* Main Content */}
        <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
          {/* Active Portfolios */}
          <div className="lg:col-span-2 space-y-6">
            <Card className="border-border/50 animate-fade-in">
              <CardHeader>
                <div className="flex items-center justify-between">
                  <div>
                    <CardTitle className="text-2xl">Active Portfolios</CardTitle>
                    <CardDescription>Your current institutional strategies</CardDescription>
                  </div>
                  <Button
                    onClick={() => setShowBuilder(true)}
                    className="bg-gradient-to-r from-amber-600 to-amber-500 hover:from-amber-700 hover:to-amber-600"
                  >
                    <Plus className="h-4 w-4 mr-2" />
                    Generate New Strategy
                  </Button>
                </div>
              </CardHeader>
              <CardContent className="space-y-4">
                {portfolios.map((portfolio, index) => (
                  <Card
                    key={portfolio.id}
                    className="border-border/50 hover:border-amber-500/50 transition-all duration-300 hover:shadow-md hover-scale"
                    style={{ animationDelay: `${index * 100}ms` }}
                  >
                    <CardHeader>
                      <div className="flex items-start justify-between">
                        <div className="flex-1">
                          <CardTitle className="text-lg">{portfolio.name}</CardTitle>
                          <div className="flex items-center gap-4 mt-2 text-sm text-muted-foreground">
                            <span className="flex items-center gap-1">
                              <Calendar className="h-3 w-3" />
                              {new Date(portfolio.createdDate).toLocaleDateString()}
                            </span>
                            <Badge variant="outline">{portfolio.riskLevel}</Badge>
                          </div>
                        </div>
                        <Button
                          variant="ghost"
                          size="sm"
                          onClick={() => handleExportPDF(portfolio)}
                          className="text-amber-600 hover:text-amber-700 hover:bg-amber-50 dark:hover:bg-amber-950"
                        >
                          <Download className="h-4 w-4 mr-1" />
                          Export PDF
                        </Button>
                      </div>
                    </CardHeader>
                    <CardContent>
                      <div className="grid grid-cols-2 gap-4 mb-4">
                        <div>
                          <p className="text-sm text-muted-foreground">Current Value</p>
                          <p className="text-xl font-bold">
                            ${portfolio.currentValue.toLocaleString()}
                          </p>
                        </div>
                        <div>
                          <p className="text-sm text-muted-foreground">Projected Return</p>
                          <p className="text-xl font-bold text-green-600">
                            {portfolio.projectedReturn}%
                          </p>
                        </div>
                      </div>

                      <div className="space-y-2">
                        <p className="text-sm font-medium mb-2">Asset Allocation</p>
                        {Object.entries(portfolio.allocation).map(([asset, percent]) => (
                          <div key={asset} className="space-y-1">
                            <div className="flex justify-between text-xs">
                              <span className="capitalize">{asset}</span>
                              <span className="font-medium">{percent}%</span>
                            </div>
                            <Progress value={percent} className="h-2" />
                          </div>
                        ))}
                      </div>
                    </CardContent>
                  </Card>
                ))}
              </CardContent>
            </Card>
          </div>

          {/* Sidebar */}
          <div className="space-y-6">
            {/* AI Performance Summary */}
            <Card className="border-border/50 animate-fade-in">
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <BarChart3 className="h-5 w-5 text-amber-600 dark:text-amber-400" />
                  AI Performance Summary
                </CardTitle>
                <CardDescription>Simulated projections & insights</CardDescription>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="space-y-3">
                  <div className="flex items-center justify-between">
                    <span className="text-sm">Risk-Adjusted Return</span>
                    <span className="text-sm font-bold text-green-600 flex items-center gap-1">
                      <ArrowUpRight className="h-3 w-3" />
                      8.2%
                    </span>
                  </div>
                  <div className="flex items-center justify-between">
                    <span className="text-sm">Portfolio Diversity</span>
                    <span className="text-sm font-bold">High</span>
                  </div>
                  <div className="flex items-center justify-between">
                    <span className="text-sm">Volatility Index</span>
                    <span className="text-sm font-bold text-yellow-600">Moderate</span>
                  </div>
                  <div className="flex items-center justify-between">
                    <span className="text-sm">AI Confidence Score</span>
                    <span className="text-sm font-bold">87%</span>
                  </div>
                </div>

                <div className="pt-4 border-t border-border">
                  <p className="text-xs text-muted-foreground mb-2">Next Rebalancing</p>
                  <p className="text-sm font-medium">January 15, 2026</p>
                </div>
              </CardContent>
            </Card>

            {/* Upgrade CTA */}
            <Card className="border-amber-500/50 bg-gradient-to-br from-amber-50 to-amber-100 dark:from-amber-950/20 dark:to-amber-900/20 animate-fade-in">
              <CardHeader>
                <CardTitle className="flex items-center gap-2 text-amber-900 dark:text-amber-100">
                  <Crown className="h-5 w-5" />
                  Unlock Enterprise
                </CardTitle>
                <CardDescription className="text-amber-800/70 dark:text-amber-200/70">
                  Scale your institutional capabilities
                </CardDescription>
              </CardHeader>
              <CardContent className="space-y-4">
                <ul className="space-y-2 text-sm">
                  <li className="flex items-start gap-2">
                    <div className="rounded-full bg-amber-600 p-0.5 mt-0.5">
                      <div className="h-1.5 w-1.5 rounded-full bg-white" />
                    </div>
                    <span>Unlimited portfolio models</span>
                  </li>
                  <li className="flex items-start gap-2">
                    <div className="rounded-full bg-amber-600 p-0.5 mt-0.5">
                      <div className="h-1.5 w-1.5 rounded-full bg-white" />
                    </div>
                    <span>White-label reports</span>
                  </li>
                  <li className="flex items-start gap-2">
                    <div className="rounded-full bg-amber-600 p-0.5 mt-0.5">
                      <div className="h-1.5 w-1.5 rounded-full bg-white" />
                    </div>
                    <span>Dedicated account manager</span>
                  </li>
                  <li className="flex items-start gap-2">
                    <div className="rounded-full bg-amber-600 p-0.5 mt-0.5">
                      <div className="h-1.5 w-1.5 rounded-full bg-white" />
                    </div>
                    <span>Custom AI optimization</span>
                  </li>
                </ul>

                <Button className="w-full bg-gradient-to-r from-amber-600 to-amber-500 hover:from-amber-700 hover:to-amber-600 text-white">
                  Upgrade to Enterprise
                </Button>
              </CardContent>
            </Card>
          </div>
        </div>

        {/* Compliance Disclaimer */}
        <div className="mt-8">
          <InstitutionalDisclaimer />
        </div>
      </div>

      <Footer />
    </div>
  );
}
